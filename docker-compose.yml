services:
    redis:
        image: redis:6.2-rc3-alpine
        command: redis-server
        ports:
            - 6379:6379
        networks:
            - app

    graphql-engine:
        image: hasura/graphql-engine:v2.1.1.cli-migrations-v3
        ports:
            - ${HASURA_PORT_HOST}:${HASURA_PORT_CONTAINER}
        depends_on:
            db:
                condition: service_healthy
            server:
                condition: service_healthy
        restart: always
        environment:
            HASURA_GRAPHQL_LOG_LEVEL: warn
            HASURA_GRAPHQL_DATABASE_URL: ${HASURA_GRAPHQL_DATABASE_URL}
            HASURA_GRAPHQL_UNAUTHORIZED_ROLE: ${HASURA_GRAPHQL_UNAUTHORIZED_ROLE}
            HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: "true"
            ## enable the console served by server
            HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
            ## enable debugging mode. It is recommended to disable this in production
            HASURA_GRAPHQL_DEV_MODE: "true"
            HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
            HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET}
        #     HASURA_GRAPHQL_METADATA_DIR: /hasura-metadata
        # volumes:
        #     - ./hasura/metadata:/hasura-metadata
        networks:
            - app

    client:
        build: ./client
        # command: npm run build
        # command: npx serve -s build -l 3000
        environment:
            CHOKIDAR_USEPOLLING: "true"
            FAST_REFRESH: "true"
        volumes:
            - ./client:/usr/src/app
        ports:
            - 3000:3000
        networks:
            - app

    server:
        build: ./server
        volumes:
            - ./server:/usr/src/app
        ports:
            - 8081:8081
        networks:
            - app

networks:
    app:
        driver: bridge
